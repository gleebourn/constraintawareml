#!/usr/bin/env python
from sys import path,argv
from pathlib import Path
path.append(str(Path('.').absolute()))

from pandas import read_csv
from jax.numpy import array

from cal.jaxn import hidden_layer_perceptron

Xy=read_csv('~/data/UNSW_NB15_training-set.csv').select_dtypes(include='number')
X=array(Xy.drop(columns='label'),dtype=float)
y=array(Xy['label'],dtype=float)
print('X.shape=',X.shape)
print('y.shape=',y.shape)
print('X=',X)
print('y=',y)

hlp=hidden_layer_perceptron(X.shape[1],32)

batch_size=64

n_epochs=30
#Just randomly sample forever, after a few epochs each point samples ~#epochs times anyway
n_batches=int((len(y)/batch_size)*n_epochs)

for i in range(n_batches):
  hlp.gradient_desc_step(X,y,.1,mk_batch=batch_size)
  if not(i%10000):
    print('Batch',i,'whole test set loss:',hlp.loss_batch(X,y))
