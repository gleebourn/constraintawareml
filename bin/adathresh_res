#!/usr/bin/env python
from pickle import load
from numpy import array,max as nmx,min as nmn,log,exp
from sys import path,stdin,argv
from os import mkdir,environ,get_terminal_size
from pathlib import Path
from collections import namedtuple
from os.path import dirname,abspath
from sys import path
from jax import config,devices
config.update('jax_default_device',devices('cpu')[0])
path.append(dirname(dirname(abspath(__file__))))
from cal.thlay import f_to_str
argv.append('adathresh_res.pkl')

with Path(argv[1]).open('rb') as fd:tfps,tfns,d,mod_shape=load(fd)

print('Model shape:',mod_shape)

##Get worst performance for last 10 epochs
fpfnrls=list(d)
#worsts_fp=[nmx(v['fp_trn'][-10:],axis=0) for v in d.values()]
#worsts_fn=[nmx(v['fn_trn'][-10:],axis=0) for v in d.values()]

##Get performance for last epoch
#fpfnrls=list(d)
last_fp=[v['fp_trn'][-1] for v in d.values()]
last_fn=[v['fn_trn'][-1] for v in d.values()]
regret_fp=[log(exp(v).mean(axis=0)) for v in [vv['fp_trn'][-len(vv['fp_trn'])//4:] for vv in d.values()]]
regret_fn=[log(exp(v).mean(axis=0)) for v in  [vv['fn_trn'][-len(vv['fn_trn'])//4:] for vv in d.values()]]
stat_fp=last_fp
stat_fn=last_fn

srch=lambda x:x[2][-1]#lambda x:nmx(x[2])
L=sorted(list(zip(fpfnrls,stat_fp,stat_fn)),key=srch)

f_to_str(['lrfpfn','reg','lr  tfp:']+list(tfps),p=True)
f_to_str(['lrfpfn','reg','lr  tfn:']+list(tfns),p=True)
[(f_to_str(list(fpfnrl)+[max(a/tfp,b/tfn) for a,b,tfp,tfn in zip(A,B,tfps,tfns)],p=True),\
  f_to_str(list(['','','fp'])+list(A),p=True),f_to_str(['','','fn']+list(B),p=True))\
 for fpfnrl,A,B in L]


