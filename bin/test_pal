#!/usr/bin/env python
from sys import path
from pathlib import Path
path.append(str(Path('.').absolute()))

from numpy import ones

from cal.pal import PAL_inf,PAL_upd #PAL inference and update rules
from cal.rsynth import mk_synthetic_linear

print('Generating time dependent linear model dataset...')
n_features=10
n_rows=10000
X,y=mk_synthetic_linear(n_features,n_rows,scheme='walkingmodel')
p=ones(n_features)

fp=fn=tp=tn=0
for i in range(0,n_rows):
  y_pred=PAL_inf(p,X[i])
  p=PAL_upd(p,X[i],y[i],y_pred=y_pred)
  if y_pred==y[i]:
    if y[i]==1.:
      tp+=1
    else:
      tn+=1
  else:
    if y[i]==1.:
      fn+=1
    else:
      fp+=1
  if not(i%100):
    print('y:',y[i])
    print('y_pred:',y_pred)
    print('Empiriical rates:')
    print('fp:',fp/(i+1))
    print('fn:',fn/(i+1))
    print('tp:',tp/(i+1))
    print('tn:',tn/(i+1))

print('Final empirical rates:')
print('fp:',fp/(i+1))
print('fn:',fn/(i+1))
print('tp:',tp/(i+1))
print('tn:',tn/(i+1))

