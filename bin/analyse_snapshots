#!/usr/bin/env python
from sys import path,argv
from os import listdir
from pathlib import Path
path.append(str(Path('.').absolute()))
from pickle import dump,load

from jax.numpy import convolve,array,load,diff,log,linspace,ones,max as jmx
from cal.jaxn import bin_optimiser,nlp_params,nlp_infer,conv_params,conv_infer

from matplotlib.pyplot import plot,show,cm,legend,axvline,axhline

f_names=listdir(argv[1])
f_names=[i for i in f_names if i[-4:]=='.npy']
f_names.sort()
steps=array([float(i[:-4]) for i in f_names])
step_spacings=diff(steps)
snapshots=[load(argv[1]+i,allow_pickle=True).item() for i in f_names]
snapshots_timeseries={}
d_snapshots={}
sup_d_snapshots={}
lt_smooth=len(steps)//10
print(lt_smooth)
for k,c in zip(snapshots[0],cm.rainbow(linspace(0,1,len(snapshots[0])))):
  snapshots_timeseries[k]=array([i[k] for i in snapshots])
  d_snapshots[k]=(diff(snapshots_timeseries[k],axis=0).T/step_spacings.T).T
  sup_d_snapshots[k]=jmx(abs(d_snapshots[k]),axis=range(1,d_snapshots[k].ndim))
  renormalised_sup_d_snapshot=sup_d_snapshots[k]/jmx(sup_d_snapshots[k])
  plot(steps[:-1],renormalised_sup_d_snapshot,color=c,label=k)
  plot(steps[lt_smooth//2:-(1+lt_smooth//2)],convolve(renormalised_sup_d_snapshot,
       ones(shape=lt_smooth)/lt_smooth,'valid'),color=c,linestyle='dotted')

legend()
axvline(0,color='black')
axhline(0,color='black')
show()
